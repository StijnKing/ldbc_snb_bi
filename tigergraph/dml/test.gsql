// this solution uses less memory but is slower
USE GRAPH ldbc_snb
CREATE OR REPLACE DISTRIBUTED QUERY test(DATETIME startDate, DATETIME endDate, STRING file) syntax v2 {
  FILE file1 (file);
  MinAccum<UINT> @creator, @replyto;
  SetAccum<UINT> @neighbor;
  INT startEpoch = datetime_to_epoch(startDate) * 1000;
  INT endEpoch = datetime_to_epoch(endDate) * 1000;

  P = SELECT p FROM Person:p
    WHERE p.creationDate BETWEEN startEpoch AND endEpoch;
  tmp = SELECT p FROM P:p -(KNOWS)- Person:p2
    ACCUM p2.@neighbor += p.id;
  M1 = SELECT m1 FROM P:p -(<HAS_CREATOR)- _:m1
    ACCUM m1.@creator += p.id;
  M2 = SELECT m2 FROM M1:m1 -(<REPLY_OF)- _:m2
    ACCUM m2.@replyto += m1.@creator;
  PersonReplied = SELECT p FROM M2:m2 -(HAS_CREATOR>)- Person:p
    WHERE m2.@replyto IN p.@neighbor
    ACCUM file1.println(p.id, m2.@replyto);
}

CREATE OR REPLACE DISTRIBUTED QUERY test2(DATETIME startDate, DATETIME endDate, STRING file) syntax v2 {
  FILE file1 (file);
  MinAccum<UINT> @creator, @replyto;
  SetAccum<UINT> @neighbor;
  INT startEpoch = datetime_to_epoch(startDate) * 1000;
  INT endEpoch = datetime_to_epoch(endDate) * 1000;

  tmp = SELECT p2 FROM Person:p1 -(KNOWS)- Person:p2
    ACCUM p1.@neighbor += p2.id;
  
  M1 = SELECT m FROM Comment:m WHERE m.creationDate BETWEEN startEpoch AND endEpoch;
  M2 = SELECT m2 FROM M1:m1 -(REPLY_OF>)- _:m2;
  M2 = SELECT m2 FROM M2:m2 -(HAS_CREATOR>)- Person:p
    ACCUM m2.@creator += p.id;
  M1 = SELECT m1 FROM M1:m1 -(REPLY_OF>)- _:m2
    ACCUM m1.@replyto += m2.@creator;
  PersonReplied = SELECT p FROM M1:m1 -(HAS_CREATOR>)- Person:p
    WHERE m1.@replyto IN p.@neighbor
    ACCUM file1.println(p.id, m1.@replyto);
}

INSTALL QUERY test, test2
